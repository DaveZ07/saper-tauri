#!/bin/bash
# manage-app.sh - ZarzƒÖdzanie aplikacjƒÖ Saper na Xiaomi
# Opcje: uninstall, install, launch, logs

echo "üì± === ZARZƒÑDZANIE APLIKACJƒÑ SAPER === üì±"

# Kolory
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

# Konfiguracja
export ANDROID_HOME="/c/Users/dawid/AppData/Local/Android/Sdk"
ADB_PATH="$ANDROID_HOME/platform-tools/adb.exe"
PACKAGE_NAME="com.tauri.saper"
XIAOMI_IP="192.168.1.247:41497"

# Sprawd≈∫ ADB
if [ ! -f "$ADB_PATH" ]; then
    log_error "ADB nie znalezione!"
    exit 1
fi

# Funkcja do aktualizacji portu ADB
update_adb_port() {
    log_info "Sprawdzanie najnowszego portu ADB..."
    
    # Sprawd≈∫ dostƒôpne urzƒÖdzenia
    local devices_output
    devices_output=$("$ADB_PATH" devices 2>/dev/null)
    local new_ip_port
    new_ip_port=$(echo "$devices_output" | grep "192.168.1" | grep "device" | head -1 | awk '{print $1}')
    
    if [ -n "$new_ip_port" ] && [ "$new_ip_port" != "$XIAOMI_IP" ]; then
        log_info "Znaleziono nowy port: $new_ip_port"
        # Aktualizuj w tym skrypcie
        sed -i "s/XIAOMI_IP=\"[^\"]*\"/XIAOMI_IP=\"$new_ip_port\"/g" "$0"
        # Aktualizuj w innych skryptach
        if [ -f "build-and-deploy.sh" ]; then
            sed -i "s/XIAOMI_IP=\"[^\"]*\"/XIAOMI_IP=\"$new_ip_port\"/g" "build-and-deploy.sh"
        fi
        if [ -f "quick-deploy.sh" ]; then
            sed -i "s/XIAOMI_IP=\"[^\"]*\"/XIAOMI_IP=\"$new_ip_port\"/g" "quick-deploy.sh"
        fi
        XIAOMI_IP="192.168.1.247:41497"
        log_success "Port ADB zaktualizowany we wszystkich skryptach"
    fi
}

# Funkcja po≈ÇƒÖczenia
connect_device() {
    log_info "≈ÅƒÖczenie z urzƒÖdzeniem..."
    update_adb_port  # Aktualizuj port przed po≈ÇƒÖczeniem
    
    "$ADB_PATH" connect $XIAOMI_IP
    
    DEVICE_STATUS=$("$ADB_PATH" devices | grep "$XIAOMI_IP" | awk '{print $2}')
    if [ "$DEVICE_STATUS" != "device" ]; then
        log_error "Nie mo≈ºna po≈ÇƒÖczyƒá z urzƒÖdzeniem!"
        exit 1
    fi
    log_success "UrzƒÖdzenie po≈ÇƒÖczone"
}

# Menu opcji
echo "Wybierz akcjƒô:"
echo "1. Zainstaluj aplikacjƒô"
echo "2. Odinstaluj aplikacjƒô" 
echo "3. Uruchom aplikacjƒô"
echo "4. Zatrzymaj aplikacjƒô"
echo "5. Sprawd≈∫ czy jest zainstalowana"
echo "6. Poka≈º logi aplikacji"
echo "7. Wyczy≈õƒá dane aplikacji"
echo "8. Restart aplikacji"
echo "9. Sprawd≈∫ ustawienia MIUI/Xiaomi"

read -p "Wybierz opcjƒô (1-9): " choice

connect_device

case $choice in
    1)
        if [ -f "saper-xiaomi-compatible.apk" ]; then
            log_info "Instalowanie aplikacji na MIUI/Xiaomi..."
            log_warning "WA≈ªNE: Sprawd≈∫ telefon - mo≈ºe pojawiƒá siƒô popup!"
            echo "   1. Je≈õli pojawi siƒô pytanie o instalacjƒô - zaakceptuj"
            echo "   2. Je≈õli pojawi siƒô 'Zainstalowaƒá tƒô aplikacjƒô?' - kliknij OK"
            echo "   3. Poczekaj na komunikat o instalacji..."
            echo ""
            
            # Pr√≥ba 1: Standardowa instalacja z replace
            log_info "Pr√≥ba 1: Standardowa instalacja..."
            if "$ADB_PATH" install -r saper-xiaomi-compatible.apk; then
                log_success "Instalacja zako≈Ñczona pomy≈õlnie!"
            else
                log_warning "Pr√≥ba 1 nieudana. Pr√≥ba 2 z dodatkowymi flagami..."
                
                # Pr√≥ba 2: Z flagami dla MIUI
                if "$ADB_PATH" install -r -t -d saper-xiaomi-compatible.apk; then
                    log_success "Instalacja zako≈Ñczona pomy≈õlnie!"
                else
                    log_warning "Pr√≥ba 2 nieudana. Pr√≥ba 3: Push i install..."
                    
                    # Pr√≥ba 3: Push pliku i install przez shell
                    "$ADB_PATH" push saper-xiaomi-compatible.apk /data/local/tmp/
                    "$ADB_PATH" shell pm install -r -t /data/local/tmp/saper-xiaomi-compatible.apk
                    "$ADB_PATH" shell rm /data/local/tmp/saper-xiaomi-compatible.apk
                fi
            fi
        else
            log_error "Nie znaleziono pliku APK!"
            echo "Uruchom najpierw: bash build-and-deploy.sh"
        fi
        ;;
    2)
        log_info "Odinstalowywanie aplikacji..."
        "$ADB_PATH" uninstall $PACKAGE_NAME
        ;;
    3)
        log_info "Uruchamianie aplikacji..."
        "$ADB_PATH" shell am start -n $PACKAGE_NAME/.MainActivity
        ;;
    4)
        log_info "Zatrzymywanie aplikacji..."
        "$ADB_PATH" shell am force-stop $PACKAGE_NAME
        ;;
    5)
        log_info "Sprawdzanie instalacji..."
        if "$ADB_PATH" shell pm list packages | grep -q $PACKAGE_NAME; then
            log_success "Aplikacja jest zainstalowana"
            # Poka≈º szczeg√≥≈Çy
            "$ADB_PATH" shell dumpsys package $PACKAGE_NAME | head -20
        else
            log_warning "Aplikacja nie jest zainstalowana"
        fi
        ;;
    6)
        log_info "Pokazywanie log√≥w aplikacji..."
        echo "Naci≈õnij Ctrl+C aby zatrzymaƒá..."
        "$ADB_PATH" logcat | grep $PACKAGE_NAME
        ;;
    7)
        log_info "Czyszczenie danych aplikacji..."
        "$ADB_PATH" shell pm clear $PACKAGE_NAME
        ;;
    8)
        log_info "Restart aplikacji..."
        "$ADB_PATH" shell am force-stop $PACKAGE_NAME
        sleep 2
        "$ADB_PATH" shell am start -n $PACKAGE_NAME/.MainActivity
        ;;
    9)
        log_info "Sprawdzanie ustawie≈Ñ MIUI/Xiaomi..."
        echo ""
        echo "üìã WYMAGANE USTAWIENIA MIUI:"
        echo "   1. Ustawienia ‚Üí O telefonie ‚Üí 7x kliknij 'Numer kompilacji'"
        echo "   2. Ustawienia ‚Üí Dodatkowe ‚Üí Opcje dewelopera:"
        echo "      - ‚úÖ Debugowanie USB"
        echo "      - ‚ùå MIUI optimization (WY≈ÅƒÑCZ!)"
        echo "      - ‚úÖ Instaluj przez USB"
        echo "      - ‚úÖ Weryfikacja aplikacji przez USB (mo≈ºe byƒá wy≈ÇƒÖczone)"
        echo ""
        echo "üîç SPRAWDZANIE USTAWIE≈É:"
        
        # Sprawd≈∫ czy opcje dewelopera sƒÖ w≈ÇƒÖczone
        DEV_OPTIONS=$("$ADB_PATH" shell settings get global development_settings_enabled 2>/dev/null)
        if [ "$DEV_OPTIONS" = "1" ]; then
            log_success "Opcje dewelopera: W≈ÅƒÑCZONE"
        else
            log_error "Opcje dewelopera: WY≈ÅƒÑCZONE"
        fi
        
        # Sprawd≈∫ debugowanie USB
        USB_DEBUG=$("$ADB_PATH" shell settings get global adb_enabled 2>/dev/null)
        if [ "$USB_DEBUG" = "1" ]; then
            log_success "Debugowanie USB: W≈ÅƒÑCZONE"
        else
            log_error "Debugowanie USB: WY≈ÅƒÑCZONE"
        fi
        
        # Sprawd≈∫ weryfikacjƒô aplikacji
        VERIFY_APPS=$("$ADB_PATH" shell settings get global package_verifier_enable 2>/dev/null)
        if [ "$VERIFY_APPS" = "1" ]; then
            log_warning "Weryfikacja aplikacji: W≈ÅƒÑCZONA (mo≈ºe blokowaƒá instalacjƒô)"
        else
            log_success "Weryfikacja aplikacji: WY≈ÅƒÑCZONA"
        fi
        
        echo ""
        log_info "Je≈õli instalacja nadal nie dzia≈Ça:"
        echo "   1. Wy≈ÇƒÖcz 'MIUI optimization' w opcjach dewelopera"
        echo "   2. Zrestartuj telefon"
        echo "   3. W≈ÇƒÖcz ponownie debugowanie bezprzewodowe"
        echo "   4. Spr√≥buj instalacji ponownie"
        ;;
    *)
        log_error "Nieprawid≈Çowa opcja!"
        ;;
esac

log_success "Operacja zako≈Ñczona!"
